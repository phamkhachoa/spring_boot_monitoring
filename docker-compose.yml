version: '3'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    volumes:
      - ./data/db_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d/ # nếu bạn không phải devops vui lòng contact anonystick. tks
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--skip-character-set-client-handshake'  # Buộc tất cả kết nối sử dụng utf8mb4
    ]
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: ticket
      MYSQL_USER: root
      MYSQL_PASSWORD: root1234
    ports:
      - "3306:3306"

  #Redis
  redis:
    container_name: redis
    image: redislabs/redismod:latest
    ports:
      - "6379:6379"


  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.91.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    restart: always
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "8889" # Prometheus exporter metrics
    depends_on:
      - loki
      - jaeger-all-in-one
      - zipkin-all-in-one
      - tempo

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    restart: always
    ports:
      - "4317"  # otlp grpc
      - "3200"  # tempo as grafana datasource

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    ports:
      - "3100"

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - collector

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
      - jaeger-all-in-one
      - zipkin-all-in-one
      - tempo

  jaeger-all-in-one:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"
      - "4317"

  zipkin-all-in-one:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"