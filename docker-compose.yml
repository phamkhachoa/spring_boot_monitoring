version: '3'

networks:
  vpg-event-network:
    driver: bridge

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    volumes:
      - ./data/db_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d/ # nếu bạn không phải devops vui lòng contact anonystick. tks
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--skip-character-set-client-handshake'  # Buộc tất cả kết nối sử dụng utf8mb4
    ]
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: ticket
      MYSQL_USER: root
      MYSQL_PASSWORD: root1234
    ports:
      - "3306:3306"
    networks:
      - vpg-event-network

  #Redis
  redis:
    container_name: redis
    image: redislabs/redismod:latest
    ports:
      - "6379:6379"
    networks:
      - vpg-event-network

#  collector:
#    container_name: collector
#    image: otel/opentelemetry-collector-contrib:0.82.0
#    restart: always
#    command:
#      - --config=/etc/otlcol-contrib/config.yml
#    volumes:
#      - ./docker/collector/otel-collector.yml:/etc/otlcol-contrib/config.yml
#    ports:
#      - "1888:1888"
#      - "8888:8888"
#      - "8889:8889"
#      - "13133:13133"
#      - "4317:4317"
#      - "4318:4318"
#      - "55679:55679"
#    depends_on:
#      - jaeger-all-in-one
#      - zipkin-all-in-one
#    networks:
#      - vpg-event-network

#  prometheus:
#    container_name: prometheus
#    image: prom/prometheus
#    volumes:
#      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    command:
#      - --config.file=/etc/prometheus/prometheus.yml
#      - --enable-feature=exemplar-storage
#      - --web.enable-remote-write-receiver
#    restart: always
#    ports:
#      - '9090:9090'
#    depends_on:
#      - collector

  promethus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    extra_hosts:
      - host.docker.internal:host-gateway
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - vpg-event-network

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.72.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    restart: always
    ports:
      - "1888:1888"
      - "8888:8888"
      - "8889:8889"
      - "13133:13133"
      - "4317:4317"
      - "4318:4318"
      - "55679:55679"
    networks:
      - vpg-event-network

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    networks:
      - vpg-event-network
#    depends_on:
#      - prometheus
#      - loki
#      - jaeger-all-in-one
#      - zipkin-all-in-one
#      - tempo

  jaeger-all-in-one:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"
      - "14250"
    networks:
      - vpg-event-network